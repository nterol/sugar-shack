generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brands {
  id           String     @id @unique @default(cuid())
  name         String     @unique
  handle       String     @unique
  url          String
  presentation String
  headline     String
  Products     Products[]
}

enum ProductType {
  CLEAR
  AMBER
  DARK
}

model Products {
  id          String       @id @unique @default(cuid())
  handle      String       @unique
  name        String
  description String
  image       String
  blurDataURL String
  price       Float
  stock       Int
  type        ProductType
  cartItems   CartItems[]
  orderlines  Orderlines[]
  brand       Brands       @relation(fields: [brandName], references: [name])
  brandName   String
}

model CartItems {
  id        String   @id @unique @default(cuid())
  cartID    String   @unique
  quantity  Int      @default(0)
  addedAt   DateTime @default(now())
  cart      Cart     @relation(fields: [cartID], references: [id], onDelete: Cascade)
  product   Products @relation(fields: [productID], references: [id])
  productID String
}

model Cart {
  id        String      @id @unique @default(cuid())
  createdAt DateTime    @default(now())
  cartItems CartItems[]
  Order     Order?
}

model Orderlines {
  id        String   @id @unique @default(cuid())
  qty       Int
  product   Products @relation(fields: [productID], references: [id])
  productID String
  order     Order    @relation(fields: [orderID], references: [id], onDelete: Cascade)
  orderID   String
}

model Order {
  id           String       @id @unique @default(cuid())
  isOrderValid Boolean
  cartID       String       @unique
  cart         Cart         @relation(fields: [cartID], references: [id], onDelete: Cascade)
  orderlines   Orderlines[]
}
